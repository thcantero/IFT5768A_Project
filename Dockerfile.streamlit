# To build a container, you will use the docker build command
# https://docs.docker.com/engine/reference/commandline/build/
#
#   docker build -t <IMAGE TAG> -f Dockerfile.serving .
#   docker build -t <IMAGE TAG> -f Dockerfile.jupyter .
#


# https://docs.docker.com/engine/reference/builder/#from
# You shouldn't need to change this
FROM python:3.9-slim

# https://docs.docker.com/engine/reference/builder/#workdir
# Create and cd into /code as your working directory
WORKDIR /code


# The main docker commands you will find useful:
# 
# Add a file or directory
# https://docs.docker.com/engine/reference/builder/#add
#
#       ADD ./<SOURCE_DIR/FILE> ./<DOCKER_DIR/FILE>
#
# Run a shell command (tip: chain shell commands with && rather than multiple RUN commands)
# https://docs.docker.com/engine/reference/builder/#run
#
#       RUN <SHELL COMMAND>   
#
# Set an environment variable:
# https://docs.docker.com/engine/reference/builder/#env
#
#       ENV <ENV_VAR>=<DEFAULT>
#
# Expose a port
# https://docs.docker.com/engine/reference/builder/#port
#
#       EXPOSE <PORT>
#
# Provide default command for executing container
# https://docs.docker.com/engine/reference/builder/#cmd
#
#       CMD <SHELL COMMAND>



# Copy the requirements file and install dependencies
COPY ./ift6758/requirements.txt /code/
RUN pip install --no-cache-dir -r requirements.txt

# Copy packages
COPY setup.py /code/
COPY ./src/client /code/src/client
COPY ./models /code/models
COPY ./src/features /code/src/features
COPY ./figures /code/figures
COPY ./streamlitapp.py /code/


# Install project package
RUN pip install -e .

# run Streamlit app
CMD ["streamlit", "run", "/code/streamlitapp.py", "--server.port", "8501", "--server.address", "0.0.0.0"]
