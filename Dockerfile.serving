# To build a container, you will use the docker build command
# https://docs.docker.com/engine/reference/commandline/build/
#
#   docker build -t <IMAGE TAG> -f Dockerfile.serving .
#   docker build -t <IMAGE TAG> -f Dockerfile.jupyter .
#


# https://docs.docker.com/engine/reference/builder/#from
# You shouldn't need to change this
FROM python:3.9-slim

# https://docs.docker.com/engine/reference/builder/#workdir
# Create and cd into /code as your working directory
WORKDIR /code

# Copy the requirements file to the working directory
COPY ./ift6758/requirements.txt /code/requirements.txt

# Install Python dependencies
RUN pip install --no-cache-dir -r requirements.txt

# Copy the application code into the container
COPY ./serving/app.py /code/app.py
COPY ./models /code/models

# Set environment variable for WANDB_API_KEY
# This value will be provided at runtime
#ENV API_KEY=${API_KEY}

# Environment variable to pass at runtime (do not hardcode secrets here)
ENV FLASK_APP=app.py

# Expose Flask port (optional if not handled in docker-compose)
EXPOSE 7000

# Specify the default command to run the Flask app
CMD ["gunicorn", "--bind", "0.0.0.0:7000", "app:app"]


# The main docker commands you will find useful:
# 
# Add a file or directory
# https://docs.docker.com/engine/reference/builder/#add
#
#       ADD ./<SOURCE_DIR/FILE> ./<DOCKER_DIR/FILE>
#
# Run a shell command (tip: chain shell commands with && rather than multiple RUN commands)
# https://docs.docker.com/engine/reference/builder/#run
#
#       RUN <SHELL COMMAND>   
#
# Set an environment variable:
# https://docs.docker.com/engine/reference/builder/#env
#
#       ENV <ENV_VAR>=<DEFAULT>
#
# Expose a port
# https://docs.docker.com/engine/reference/builder/#port
#
#       EXPOSE <PORT>
#
# Provide default command for executing container
# https://docs.docker.com/engine/reference/builder/#cmd
#
#       CMD <SHELL COMMAND>



# TODO: add code, optionally a default model if you want 


# TODO: install libs


# TODO: expose ports (or do this in docker-compose)


# TODO: specify default command - this is not required because you can always specify the command
# either with the docker run command or in the docker-compose file
